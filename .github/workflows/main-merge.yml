name: Sync Shared Files to Datapack Branches

on:
  push:
    branches:
      - main  # Runs when pushing to the "sync" branch
  workflow_dispatch:  # Allows manual execution from GitHub

jobs:
  merge-sync:
    name: Merge Main into Datapack Branches
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full commit history is available

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Fetch all branches and sync
        run: |
          git fetch --all  # Ensures all branches are fetched from origin

          # List of all remote branches excluding `main`
          BRANCHES=$(git branch -r | grep -Eo "origin/[^/]+" | sed 's/origin\///' | grep -vE '^(main)$')

          # Loop through each branch
          for branch in $BRANCHES; do
            echo "Merging sync into $branch..."

            # Checkout the branch
            git checkout $branch

            # Pull the latest changes from the remote branch
            git pull origin $branch --rebase  # Using rebase to avoid merge commits

            # Merge the sync branch into the current branch
            git merge --no-edit origin/sync || echo "No new changes to merge or merge conflict detected"

            # If there's a conflict, handle it automatically (you can also choose to exit early if conflicts are too complex)
            if [ $? -ne 0 ]; then
              echo "Merge conflict detected, skipping the branch: $branch"
              continue
            fi

            # Push the updated branch back to origin
            git push origin $branch
          done
